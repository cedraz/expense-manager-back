// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String         @id @default(uuid())
  name          String
  email         String         @unique
  password_hash String
  created_at    DateTime       @default(now())
  CreditCards   CreditCard[]
  Charges       Charge[]
  Expenses      Expense[]
  is_verified   Boolean        @default(false)
  ResetPassCode ResetPassCode?

  @@map("users")
}

model ResetPassCode {
  id         String   @id @default(uuid())
  code       String
  expires_in DateTime

  // Foreign key
  user_id String @unique
  user    User   @relation(fields: [user_id], references: [id], onDelete: Cascade)
}

model CreditCard {
  id        String    @id @default(uuid())
  card_name String
  Expenses  Expense[]

  user    User   @relation(fields: [user_id], references: [id], onDelete: Cascade)
  user_id String

  @@unique([user_id, card_name], name: "unique_credit_card_per_user")
  @@map("credit-cards")
}

model Expense {
  id          String   @id @default(uuid())
  description String
  amount      Int
  date        DateTime @default(now())

  credit_card    CreditCard @relation(fields: [credit_card_id], references: [id], onDelete: Cascade)
  credit_card_id String

  user_id String
  owner   User   @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@map("expenses")
}

model Charge {
  id          String   @id @default(uuid())
  description String
  amount      Int
  date        DateTime @default(now())

  user_id String
  owner   User   @relation(fields: [user_id], references: [id], onDelete: Cascade)

  @@map("charges")
}
